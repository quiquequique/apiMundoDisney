
###
// 2__ registra usuario
POST http://localhost:3000/auth/register
Content-Type: application/json

{
    "name":"Rod",
    "lastName":"gadop",
    "email":"bramzon@hotmail.com",
    "password":"a0059"
}

###
// 2__ postea a ruta login y recibe el token
POST http://localhost:3000/auth/login
Content-Type: application/json
// el user del ej existe en la db

{
    "email":"bramzon@hotmail.com",
    "password":"a0059"
}


###
// 3__  ruta a list de actores con el token recibido(devuelve imagen y nombre)
GET http://localhost:3000/characters
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen

###
// 4__ CRUD de characters (create, edite, delete)
POST http://localhost:3000/characters
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


{
    "image": "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Luca_Prodan.jpg/250px-Luca_Prodan.jpg",
    "name": "Pee Maso",
    "age": 22,
    "weight": 58,
    "history": "hiasdfgh esta   ksdjfgajksd fljk lsdjk fherqwerwer q werqwerqwer qwerqwerqwer q werqwer)"
}

###
// update
PUT http://localhost:3000/characters/2
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


{
    "image": "https://upload.wikimedia.org/wikipedia/commons/1/12/Florencia_de_la_V_%282012%29.jpg",
    "name": "Juan Perez updated2",
    "age": 45,
    "weight": 76,
    "history": "dfghklghsdfjksdfjklh"
}

###
// delete
DELETE http://localhost:3000/characters/7
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
// 5__ detalle personaje ( atributos + series relacionadas )
GET http://localhost:3000/characters/2
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
// 6__ busqueda de personaje (*edad / *nombre/ *pelicula)
GET http://localhost:3000/characters?age=35
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
GET http://localhost:3000/characters?name=Pablo prodan
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
GET http://localhost:3000/characters?movies=3
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen



###
// 7__ Listado de Películas Deberá mostrar solamente los campos imagen, título y fecha de creación.El endpoint deberá ser:● GET /movies
GET http://localhost:3000/movies
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
// 8__ Detalle de Película / Serie con sus personajes
GET http://localhost:3000/movies/3
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
// 9__ CRUD Movie
// crear pelicula
POST http://localhost:3000/movies
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


{
    "genreId":"1",
    "title":"NinjasIIIII",
    "image":"https://es.web.img3.acsta.net/pictures/16/06/27/12/51/126212.jpg",
    "stars":"1"
}

###
PUT http://localhost:3000/movies/11
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


{
    "genreId":"1",
    "title":"Ninjas Muertos",
    "image":"https://es.web.img3.acsta.net/pictures/16/06/27/12/51/126212.jpg",
    "stars":"2"
}

###
DELETE http://localhost:3000/movies/11
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen



###
// 10__ busqueda pelis (*nombre / *idGenero / *order ASC | DESC )
GET http://localhost:3000/movies?name=ouijaII
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
GET http://localhost:3000/movies?genre=2
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


###
GET http://localhost:3000/movies?order=desc
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen


// 11__ envio de emails funcionando en authController

###
// Detalle de genero / con pelis asociadas para probar la relacion desde el otro lado 
GET http://localhost:3000/genres/2
Content-Type: application/json
Authorization: Bearer
// add token after "Bearer" respecting 1 empty space betwen





